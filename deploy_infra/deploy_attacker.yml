- name: Deploy attacker
  hosts: pve
  gather_facts: false
  become: true
  vars:
    - lxc_hostname: "student-{{ student }}-kali"
    - vmbr: "vmbr{{ student }}"
  pre_tasks:
    - include_vars:
        file: vars.yml

    - name: Stop container
      community.general.proxmox:
        vmid: "{{ kali_template_id }}"
        api_user: "{{ pve_user }}"
        api_password: "{{ pve_pass }}"
        api_host: "{{ pve_host }}"
        state: stopped
  tasks:
    - name: Ensure the bridge configuration exists in the PVE
      community.general.network_interfaces:
        name: "{{ vmbr }}"
        state: present
        type: bridge
        enabled: true
        bridge_ports: none
        bridge_stp: off
        bridge_fd: 0

    - name: Apply network configuration to the PVE
      ansible.builtin.command: ifup vmbr1
      when: ansible_facts['ansible_network_interfaces']['"{{vmbr}}"']['state'] == 'down'
      changed_when: false

    - name: Create a full clone of the container
      community.general.proxmox:
        vmid: "{{ kali_student_vmid }}"
        api_user: "{{ pve_user }}"
        api_password: "{{ pve_pass }}"
        api_host: "{{ pve_host }}"
        node: vir2-pve-01
        clone: "{{ kali_template_id }}"
        clone_type: full
        storage: datastore-1
        hostname: "{{ lxc_hostname }}"
        state: present
        tags:
          - attacker

    - name: Configure the LXC container network interface
      community.general.proxmox_kvm:
        api_user: "{{ pve_user }}"
        api_password: "{{ pve_pass }}"
        api_host: "{{ pve_host }}"
        vmid: "{{ lxc_vmid }}"
        net: |
          net1: name=eth0,bridge={{ vmbr }},ip={{ kali_ip }},type=veth
    
    - name: Start the container
      community.general.proxmox:
        vmid: "{{ kali_student_vmid }}"
        api_user: "{{ pve_user }}"
        api_password: "{{ pve_pass }}"
        api_host: "{{ pve_host }}"
        state: started

    - name : Reset IP
      command: pct exec "{{ kali_student_vmid }}" -- bash -c "dhclient -r && dhclient"

    - name: Get lxc IP by its vmid
      shell: lxc-info -n "{{ kali_student_vmid }}" -iH
      register: ipconf

    - command: mkdir -p "{{ config_file_location }}"
      delegate_to: localhost

    - name: Writing config file
      ansible.builtin.template:
        src: templates/ipconfig.j2
        dest: "{{ config_file_location }}/{{ lxc_hostname }}"
      delegate_to: localhost